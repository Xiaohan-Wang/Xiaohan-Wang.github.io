I")<p><a href="https://ieeexplore.ieee.org/document/6205760">Paper link</a></p>

<h4 id="take-away-message">Take away message</h4>
<p>SLIC (simple linear iterative clustering) 是非常经典的超像素分割算法。其从K-means算法演化而来，算法复杂度为O(n)，只与图像的像素数有关。</p>

<p>算法的优点：</p>
<ol>
  <li>限制聚类时搜索的区域 (2Sx2S)。这样将k-means算法的复杂度降为常数。整个算法的复杂度为线性。</li>
  <li>计算距离时考虑LAB颜色和XY距离，5维。这样就把颜色和距离都考虑进去了。通过M可以调整颜色和距离的比重，灵活性强，超像素更加规则。</li>
</ol>

<h4 id="slic算法原理">SLIC算法原理</h4>
<ol>
  <li>输入超像素的个数K</li>
  <li>初始化种子点 (聚类中心)：
    <ul>
      <li>设图片共有N个像素，要分割成K个超像素，则每个超像素的大小是$\frac{N}{K}$，因此相邻种子点的步长近似为$S=\sqrt{\frac{N}{K}}$</li>
      <li>微调种子的位置：计算种子点的$n\times n$邻域内的所有像素点的梯度值 (一般n取3)，将种子点移到该邻域内梯度最小的地方。这样做的目的是为了避免种子点落在梯度较大的轮廓边界或噪声上，以免影响后续聚类效果。</li>
    </ul>
  </li>
  <li>迭代：
    <ul>
      <li>对于在每个超像素中心的 $2S\times 2S$ 范围内的所有像素点，判断他们是否属于这个超像素
        <ul>
          <li>一个像素可能位于多个超像素中心的搜索范围内，其属于距离最近的超像素</li>
          <li>距离包括颜色距离和空间距离，各自归一化后组成总距离：<br />
  <img src="/img/15918323650587.jpg" width="50%" height="100%" /><br />
  $d_c$ 代表颜色距离，$d_s$ 代表空间距离。$N_s$ 是类内最大空间距离，可知 $N_s=S=\sqrt{\frac{N}{K}}$。最大颜色距离 $N_c$ 随图片不同而不同，也随聚类不同而不同，我们常取一个固定常数 $m$ (取值范围[1,40]，一般取10) 代替。</li>
        </ul>
      </li>
      <li>对每个超像素，更新超像素中心
        <ul>
          <li>超像素中心更新为，该超像素对应的所有像素的 $[l, a, b, x, y]$ 的均值</li>
          <li>超像素中心<strong>只是该超像素对应的所有像素的聚类中心，而不必是图中实际存在的点</strong></li>
        </ul>
      </li>
      <li>一般来说，对绝大部分图片，10次迭代都可以得到较理想的效果</li>
    </ul>
  </li>
</ol>

<h4 id="实验结果">实验结果</h4>
<p><img src="/img/15918334500014.jpg" width="70%" height="100%" />
<img src="/img/15918334222120.jpg" width="60%" height="100%" /></p>

<h4 id="reference">Reference</h4>
<ol>
  <li>https://www.kawabangga.com/posts/1923</li>
  <li></li>
</ol>
:ET