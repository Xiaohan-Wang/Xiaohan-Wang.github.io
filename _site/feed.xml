<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Xiaohan's Blog</title>
    <description>Do it now.</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Thu, 25 Mar 2021 16:24:16 +0800</pubDate>
    <lastBuildDate>Thu, 25 Mar 2021 16:24:16 +0800</lastBuildDate>
    <generator>Jekyll v4.0.0</generator>
    
      <item>
        <title>.gitignore配置</title>
        <description>&lt;p&gt;.gitignore简单使用&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;前斜杠代表根目录（当前目录）
    &lt;ul&gt;
      &lt;li&gt;/data&lt;/li&gt;
      &lt;li&gt;/work_file&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;后斜杠匹配文件夹以及该文件夹下的目录
    &lt;ul&gt;
      &lt;li&gt;/train/&lt;/li&gt;
      &lt;li&gt;/a.json&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;*通配任意多个字符；**匹配任意中间目录
    &lt;ul&gt;
      &lt;li&gt;a/**/b&lt;/li&gt;
      &lt;li&gt;*.png （忽略所有的png文件）&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;!表示取反（重新包含某文件），但如果之前已经排除了文件的父目录，!不起作用
    &lt;ul&gt;
      &lt;li&gt;/mtk/&lt;/li&gt;
      &lt;li&gt;!/mtk/one.txt&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;.gitignore 文件只能作用于Untracked Files，也就是那些从来没有被 Git 记录过的文件，如果文件曾经被 Git 记录过，那么.gitignore 就对它们完全无效
解决办法：先删除本地缓存，改为未track状态
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git &lt;span class=&quot;nb&quot;&gt;rm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt; —cached
Git add &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
Git commit &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; “update .gitignore”
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Thu, 25 Mar 2021 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2021/03/25/gitignore%E4%BD%BF%E7%94%A8/</link>
        <guid isPermaLink="true">http://localhost:4000/2021/03/25/gitignore%E4%BD%BF%E7%94%A8/</guid>
        
        <category>Git</category>
        
        
      </item>
    
      <item>
        <title>vim配置</title>
        <description>&lt;h3 id=&quot;the-ultimate-vim-configuration&quot;&gt;the ultimate vim configuration&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/amix/vimrc&quot;&gt;github页面&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.meltycriss.com/2018/09/27/tech-vimrc/&quot;&gt;文件框架简单介绍&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;安装nerdtree-tabs&quot;&gt;安装nerdtree tabs&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;安装&lt;a href=&quot;https://github.com/jistr/vim-nerdtree-tabs&quot;&gt;nerdtree tabs&lt;/a&gt;，所有tab共享nerdtree&lt;/li&gt;
  &lt;li&gt;,nn 打开/关闭nerdtree （在下面配置文件中指定）&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;我的配置-my_configsvim&quot;&gt;我的配置 my_configs.vim&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;
&quot; general vim configuration
&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;
&quot; 启动鼠标操作
set mouse=a
&quot; 显示行号
set number
&quot; 括号匹配
set showmatch


&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;
&quot;=&amp;gt; nerdtree
&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;
&quot;打开vim时自动打开nerdtree
&quot;autocmd VimEnter * NERDTree

&quot; 显示nerdtree行号
&quot;let NERDTreeShowLineNumbers=0
&quot;let NERDTreeAutoCenter=0

&quot;是否显示隐藏文件
&quot;let NERDTreeShowHidden=0

&quot;双击时默认用new tab打开文件
autocmd VimEnter * call NERDTreeAddKeyMap({ 'key': '&amp;lt;2-LeftMouse&amp;gt;', 'scope': &quot;FileNode&quot;, 'callback': &quot;OpenInTab&quot;, 'override':1  })
function! OpenInTab(node)
    call a:node.activate({'reuse': 'all', 'where': 't'})
endfunction


&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;
&quot;=&amp;gt; nerdtree tabs
&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;
map &amp;lt;leader&amp;gt;nn :NERDTreeTabsToggle&amp;lt;cr
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Fri, 22 Jan 2021 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2021/01/22/vim%E9%85%8D%E7%BD%AE/</link>
        <guid isPermaLink="true">http://localhost:4000/2021/01/22/vim%E9%85%8D%E7%BD%AE/</guid>
        
        <category>Configurations</category>
        
        
      </item>
    
      <item>
        <title>跳板机连服务器打开jupyter lab</title>
        <description>&lt;p&gt;本地：&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ssh -L 5000:host_machine_ip:5000 username@jump_machine_ip&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;ssh到跳板机&lt;/li&gt;
  &lt;li&gt;通过跳板机监听内网ip为host_machine_ip（管理节点）的5000端口&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;p&gt;跳板机：
opt转到host_machine_ip（管理节点）&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;host machine:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;jupyter lab --port=5000 --ip=host_machine_ip&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;jupyter_lab使用内网ip为host_machine_ip的5000端口&lt;/p&gt;
</description>
        <pubDate>Wed, 30 Dec 2020 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2020/12/30/%E8%B7%B3%E6%9D%BF%E6%9C%BA%E8%BF%9E%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%89%93%E5%BC%80jupyter-lab/</link>
        <guid isPermaLink="true">http://localhost:4000/2020/12/30/%E8%B7%B3%E6%9D%BF%E6%9C%BA%E8%BF%9E%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%89%93%E5%BC%80jupyter-lab/</guid>
        
        <category>Configurations</category>
        
        
      </item>
    
      <item>
        <title>Linux bash命令行提示符配置</title>
        <description>&lt;h4 id=&quot;bash配置文件&quot;&gt;bash配置文件&lt;/h4&gt;

&lt;p&gt;系统级的设置（default）：&lt;/p&gt;

&lt;p&gt;存储在’/etc/profile’、‘/etc/bashrc’及目录’/etc/profile.d’下的文件中&lt;/p&gt;

&lt;p&gt;用户级别的设置，不需要root权限：&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;.bash_history ：以前输入的命令&lt;/li&gt;
  &lt;li&gt;.bash_logout ：退出 shell 时，要执行的命令&lt;/li&gt;
  &lt;li&gt;.bash_profile：登入 shell 时，要执行的命令&lt;/li&gt;
  &lt;li&gt;.bashrc：每次打开新的 shell 时，要执行的命令&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;当系统级与用户级的设置发生冲突时，将采用用户的设置。&lt;/p&gt;

&lt;h4 id=&quot;提示符prompt&quot;&gt;提示符prompt&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;在默认设置下，提示符将显示用户名、主机名、当前所在目录&lt;/li&gt;
  &lt;li&gt;最后一个字符可以标识普通用户($)或root(#)&lt;/li&gt;
  &lt;li&gt;通过 $PS1, $PS2 变量来设置提示符: 
 1) $PS1: 第一行出现的提示符
 2) $PS2: 在多行内输入一个命令时，换行后，出现的提示符&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;我的配置&quot;&gt;我的配置&lt;/h4&gt;

&lt;p&gt;在.bashrc最后添加&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;export PS1='\[\e[35m\]#\[\e[0m\] \[\e[36m\]\u\[\e[0m\] @ \[\e[32m\]\h\[\e[0m\] in \[\e[33m\]\w\[\e[0m\] [\t]\n\[\e[31m\]$ \[\e[0m\]'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;reference&quot;&gt;Reference&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/u010003835/article/details/52705371&quot;&gt;Linux命令行提示符配置&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 30 Dec 2020 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2020/12/30/Linux%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%8F%90%E7%A4%BA%E7%AC%A6%E9%85%8D%E7%BD%AE/</link>
        <guid isPermaLink="true">http://localhost:4000/2020/12/30/Linux%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%8F%90%E7%A4%BA%E7%AC%A6%E9%85%8D%E7%BD%AE/</guid>
        
        <category>Configurations</category>
        
        
      </item>
    
      <item>
        <title>Jupyter lab中使用anoconda环境</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/Cactus_mao/article/details/107673655&quot;&gt;在jupyter lab中如何进入python虚拟环境&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 15 Oct 2020 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2020/10/15/Jupyterlab%E4%B8%AD%E4%BD%BF%E7%94%A8anaconda%E7%8E%AF%E5%A2%83/</link>
        <guid isPermaLink="true">http://localhost:4000/2020/10/15/Jupyterlab%E4%B8%AD%E4%BD%BF%E7%94%A8anaconda%E7%8E%AF%E5%A2%83/</guid>
        
        <category>Configurations</category>
        
        
      </item>
    
      <item>
        <title>安装tmux</title>
        <description>&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.csdn.net/william_munch/article/details/95764667&quot;&gt;非root用户源码安装Tmux&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://squidszyd.github.io/%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/zsh/2017/08/28/zsh.html&quot;&gt;安装ncurses&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://louiszhai.github.io/2017/09/30/tmux/&quot;&gt;tmux配置及使用&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/Xiaohan-Wang/Backup/blob/master/.tmux.conf&quot;&gt;my config&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Thu, 03 Sep 2020 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2020/09/03/%E5%AE%89%E8%A3%85tmux/</link>
        <guid isPermaLink="true">http://localhost:4000/2020/09/03/%E5%AE%89%E8%A3%85tmux/</guid>
        
        <category>Configurations</category>
        
        
      </item>
    
      <item>
        <title>安装anaconda</title>
        <description>&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.jianshu.com/p/edaa744ea47d&quot;&gt;anaconda安装与使用&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Thu, 03 Sep 2020 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2020/09/03/%E5%AE%89%E8%A3%85anaconda/</link>
        <guid isPermaLink="true">http://localhost:4000/2020/09/03/%E5%AE%89%E8%A3%85anaconda/</guid>
        
        <category>Configurations</category>
        
        
      </item>
    
      <item>
        <title>安装Oh My Zsh</title>
        <description>&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://squidszyd.github.io/%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/zsh/2017/08/28/zsh.html&quot;&gt;解决ncurses问题&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;解压 ncurses tar.gz 文件
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;nb&quot;&gt;mkdir &lt;/span&gt;ncurses &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;tar&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-zxf&lt;/span&gt; ncurses-6.2.tar.gz &lt;span class=&quot;nt&quot;&gt;-C&lt;/span&gt; ncurses &lt;span class=&quot;nt&quot;&gt;--strip-components&lt;/span&gt; 1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://harttle.land/2016/10/25/install-oh-my-zsh-locally.html&quot;&gt;没有root权限zsh&amp;amp;oh-my-zsh安装&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://jyzhangchn.github.io/oh-my-zsh.html&quot;&gt;配置oh-my-zsh主题&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/Xiaohan-Wang/Backup/blob/master/xh-ys.zsh-theme&quot;&gt;my theme&lt;/a&gt; - modified from theme ys&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Thu, 03 Sep 2020 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2020/09/03/%E5%AE%89%E8%A3%85oh-my-zsh/</link>
        <guid isPermaLink="true">http://localhost:4000/2020/09/03/%E5%AE%89%E8%A3%85oh-my-zsh/</guid>
        
        <category>Configurations</category>
        
        
      </item>
    
      <item>
        <title>在SLURM节点上启动Jupyter Notebook</title>
        <description>&lt;p&gt;原载于 &lt;a href=&quot;https://zhuanlan.zhihu.com/p/65130699&quot;&gt;分享脚本远程登陆 Jupyter Notebook&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;服务器端&quot;&gt;服务器端&lt;/h4&gt;
&lt;h5 id=&quot;jupytergpush脚本&quot;&gt;jupyterGPU.sh脚本&lt;/h5&gt;
&lt;div class=&quot;language-zsh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#SBATCH --partition compsci-gpu&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#SBATCH --gres=gpu:2&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#SBATCH --time 100:00:00&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#SBATCH --job-name jupyterGPU&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# get tunneling info&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;shuf&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-i8000-9999&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-n1&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;hostname&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;whoami&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;cluster&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;hostname&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-F&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;.&quot;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{print $2}'&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 在这里添加你的服务器地址&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;clusterurl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;xxx&quot;&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt;:~/.local/bin

&lt;span class=&quot;c&quot;&gt;# print tunneling instructions jupyter-log&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;
MacOS or linux terminal command to create your ssh tunnel:
ssh -N -L &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;clusterurl&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;

 Here is the MobaXterm info:

 Forwarded port:same as remote port
 Remote server: &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;
 Remote port: &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;
 SSH server: &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;cluster&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;clusterurl&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;
 SSH login: &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$user&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;
 SSH port: 22

 Use a Browser on your local machine to go to:
 localhost:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; (prefix w/ https:// if using password)

 or copy the URL from below and put there localhost after http:// so it would be something like:
 http://localhost:9499/?token=86c93ba16aaead7529a5da0e5e5a46be7ad8cfea35b2d49f
 &quot;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# load modules or conda environments here&lt;/span&gt;
jupyter notebook &lt;span class=&quot;nt&quot;&gt;--no-browser&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--port&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--ip&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h5 id=&quot;提交jupytergpush脚本&quot;&gt;提交jupyterGPU.sh脚本&lt;/h5&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;sbatch jupyterGPU.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h5 id=&quot;查看端口信息浏览器信息&quot;&gt;查看端口信息/浏览器信息&lt;/h5&gt;
&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat &lt;/span&gt;slurm.output
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;本地&quot;&gt;本地&lt;/h4&gt;
&lt;h5 id=&quot;监听对应端口&quot;&gt;监听对应端口&lt;/h5&gt;
&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;ssh &lt;span class=&quot;nt&quot;&gt;-N&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-L&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;:&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;:&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;@&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;clusterurl&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h5 id=&quot;浏览器打开jupyter-notebook&quot;&gt;浏览器打开jupyter notebook&lt;/h5&gt;
&lt;p&gt;前往&lt;code class=&quot;highlighter-rouge&quot;&gt;http://localhost:${port}&lt;/code&gt;&lt;/p&gt;

</description>
        <pubDate>Thu, 16 Jul 2020 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2020/07/16/%E5%9C%A8slurm%E4%B8%8A%E4%BD%BF%E7%94%A8jupyter-notebook/</link>
        <guid isPermaLink="true">http://localhost:4000/2020/07/16/%E5%9C%A8slurm%E4%B8%8A%E4%BD%BF%E7%94%A8jupyter-notebook/</guid>
        
        <category>Configurations</category>
        
        
      </item>
    
      <item>
        <title>Context Encoders:_Feature Learning by Inpainting</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://arxiv.org/pdf/1604.07379.pdf&quot;&gt;Paper link&lt;/a&gt; and &lt;a href=&quot;http://people.eecs.berkeley.edu/~pathak/context_encoder/&quot;&gt;website&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;take-away-message&quot;&gt;Take away message&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;Image inpainting:
    &lt;ul&gt;
      &lt;li&gt;to fill in large missing areas of the image, it can’t get “hints” from nearby pixels&lt;/li&gt;
      &lt;li&gt;a model needs to both understand the content of an image, as well as produce a plausible hypothesis for the missing parts&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;a standard pixel-wise reconstruction loss&lt;/strong&gt;: only the reconstruction loss produces blurry results&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;an adversarial loss&lt;/strong&gt;: adding the adversarial loss results in much sharper predictions&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;model&quot;&gt;Model&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;Encoder-decoder pipeline:
    &lt;ul&gt;
      &lt;li&gt;encoder: produces a latent feature representation of that image&lt;/li&gt;
      &lt;li&gt;decoder: takes this feature representation and produces the missing image content
        &lt;ul&gt;
          &lt;li&gt;a series of five up-convolutional layers (upsampling followed by convolution)&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;channel-wise fully-connected layer&lt;/strong&gt;: connect the encoder and the decoder
        &lt;ul&gt;
          &lt;li&gt;directly propagate information from one corner of the feature map to another corner (so that we can better capture global semantic information)&lt;/li&gt;
          &lt;li&gt;essentially a fully-connected layer with groups: only propagates information within feature maps, but it has no parameters connecting different feature maps&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Loss function:
    &lt;ul&gt;
      &lt;li&gt;reconstruction (L2) loss: 
  &lt;img src=&quot;/img/15942152334674.jpg&quot; width=&quot;50%&quot; height=&quot;100%&quot; /&gt;
        &lt;ul&gt;
          &lt;li&gt;capturing the overall structure of the missing region and coherence with regards to its context, but prefer a blurry solution (because the expectation of all possible values minimizes the mean squared pixel-wise error)&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;adversarial loss: 
  &lt;img src=&quot;/img/15942164552075.jpg&quot; width=&quot;55%&quot; height=&quot;100%&quot; /&gt;
        &lt;ul&gt;
          &lt;li&gt;tries to make prediction look real, and has the effect of picking a particular mode from the distribution&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Region masks
 &lt;img src=&quot;/img/15942173051541.jpg&quot; width=&quot;60%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;central region&lt;/li&gt;
      &lt;li&gt;random block&lt;/li&gt;
      &lt;li&gt;random region (recommended)&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;Random block and random region produce a similarly general feature, while significantly outperforming the central region features.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;experiments&quot;&gt;Experiments&lt;/h4&gt;
&lt;h5 id=&quot;implementation-detail&quot;&gt;Implementation detail&lt;/h5&gt;
&lt;p&gt;Pool-free encoders: replacing all pooling layers with convolutions of the same kernel size and stride. (Intuitively, there is no reason to use pooling for reconstruction based networks.)&lt;/p&gt;

&lt;h5 id=&quot;evaluation&quot;&gt;Evaluation&lt;/h5&gt;
&lt;ol&gt;
  &lt;li&gt;Semantic Inpainting
&lt;img src=&quot;/img/15942140401143.jpg&quot; width=&quot;90%&quot; height=&quot;100%&quot; /&gt;
    &lt;ul&gt;
      &lt;li&gt;The encoder and discriminator architecture is similar to that of discriminator in [1], and decoder is similar to generator in [1].&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Feature Learning
 &lt;img src=&quot;/img/15942140603053.jpg&quot; width=&quot;90%&quot; height=&quot;100%&quot; /&gt;
    &lt;ul&gt;
      &lt;li&gt;For consistency with prior work, this paper use AlexNet as its encoder in this part.&lt;/li&gt;
      &lt;li&gt;The authors did not manage to make the adversarial loss converge with AlexNet, so they used just the reconstruction loss.&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/img/15942180841172.jpg&quot; alt=&quot;-w892&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;further-reference&quot;&gt;Further reference&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;A. Radford, L. Metz, and S. Chintala. Unsupervised representation learning with deep convolutional generative adversarial networks. ICLR, 2016.&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Tue, 07 Jul 2020 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2020/07/07/Context-Encoders-Feature-Learning-by-Inpainting/</link>
        <guid isPermaLink="true">http://localhost:4000/2020/07/07/Context-Encoders-Feature-Learning-by-Inpainting/</guid>
        
        <category>Self-supervision</category>
        
        
      </item>
    
  </channel>
</rss>
